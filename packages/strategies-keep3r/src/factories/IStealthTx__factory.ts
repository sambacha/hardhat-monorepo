/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IStealthTx, IStealthTxInterface } from "../IStealthTx";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_migratedTo",
        type: "address",
      },
    ],
    name: "MigratedStealthVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_penalty",
        type: "uint256",
      },
    ],
    name: "PenaltySet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_stealthVault",
        type: "address",
      },
    ],
    name: "StealthVaultSet",
    type: "event",
  },
  {
    inputs: [],
    name: "penalty",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_penalty",
        type: "uint256",
      },
    ],
    name: "setPenalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_stealthVault",
        type: "address",
      },
    ],
    name: "setStealthVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stealthVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IStealthTx__factory {
  static readonly abi = _abi;
  static createInterface(): IStealthTxInterface {
    return new utils.Interface(_abi) as IStealthTxInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IStealthTx {
    return new Contract(address, _abi, signerOrProvider) as IStealthTx;
  }
}
