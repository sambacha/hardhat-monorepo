/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StrategistsBlockProtection,
  StrategistsBlockProtectionInterface,
} from "../StrategistsBlockProtection";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_mechanicsRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidBlock",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DustSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GovernorAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pendingGovernor",
        type: "address",
      },
    ],
    name: "PendingGovernorSet",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "callWithBlockProtection",
    outputs: [
      {
        internalType: "bytes",
        name: "_returnData",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "governor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isGovernor",
    outputs: [
      {
        internalType: "bool",
        name: "_isGovernor",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mechanic",
        type: "address",
      },
    ],
    name: "isMechanic",
    outputs: [
      {
        internalType: "bool",
        name: "_isMechanic",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mechanicsRegistry",
    outputs: [
      {
        internalType: "address",
        name: "_mechanicRegistry",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_paused",
        type: "bool",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingGovernor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sendDust",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_mechanicsRegistry",
        type: "address",
      },
    ],
    name: "setMechanicsRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pendingGovernor",
        type: "address",
      },
    ],
    name: "setPendingGovernor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f9b380380610f9b83398101604081905261002f916100dc565b8080338061009a5760405162461bcd60e51b815260206004820152602e60248201527f676f7665726e61626c652f676f7665726e6f722d73686f756c642d6e6f742d6260448201526d652d7a65726f2d6164647265737360901b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b039283161790556004805491831661010002610100600160a81b031990921691909117905550505061010c565b6000602082840312156100ee57600080fd5b81516001600160a01b038116811461010557600080fd5b9392505050565b610e808061011b6000396000f3fe6080604052600436106100c25760003560e01c806365834acc1161007f578063e43581b811610059578063e43581b81461021f578063e58bb6391461024e578063ef47da6d14610263578063f235757f1461028357600080fd5b806365834acc146101b7578063a734f06e146101d7578063e3056a34146101ff57600080fd5b806302329a29146100c75780630290362c146100e95780630c340a24146101125780631078f3881461014a5780632db8c1291461016d5780635c975abb1461018d575b600080fd5b3480156100d357600080fd5b506100e76100e2366004610bd1565b6102a3565b005b6100fc6100f7366004610c20565b6102e2565b6040516101099190610d47565b60405180910390f35b34801561011e57600080fd5b50600054610132906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b34801561015657600080fd5b5060045461010090046001600160a01b0316610132565b34801561017957600080fd5b506100e7610188366004610d5a565b6103ef565b34801561019957600080fd5b506004546101a79060ff1681565b6040519015158152602001610109565b3480156101c357600080fd5b506101a76101d2366004610d96565b610429565b3480156101e357600080fd5b5061013273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b34801561020b57600080fd5b50600154610132906001600160a01b031681565b34801561022b57600080fd5b506101a761023a366004610d96565b6000546001600160a01b0391821691161490565b34801561025a57600080fd5b506100e76104b8565b34801561026f57600080fd5b506100e761027e366004610d96565b61051c565b34801561028f57600080fd5b506100e761029e366004610d96565b610569565b6000546001600160a01b031633146102d65760405162461bcd60e51b81526004016102cd90610db1565b60405180910390fd5b6102df8161059c565b50565b6060814381146103055760405163be5a36cf60e01b815260040160405180910390fd5b60048054604051631960d2b360e21b8152339281019290925261010090046001600160a01b0316906365834acc9060240160206040518083038186803b15801561034e57600080fd5b505afa158015610362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103869190610de8565b6103d25760405162461bcd60e51b815260206004820152601760248201527f4d616368696e6572793a206e6f74206d656368616e696300000000000000000060448201526064016102cd565b6103e66001600160a01b0386168534610629565b95945050505050565b6000546001600160a01b031633146104195760405162461bcd60e51b81526004016102cd90610db1565b610424838383610659565b505050565b60048054604051631960d2b360e21b81526001600160a01b0384811693820193909352600092610100909204909116906365834acc9060240160206040518083038186803b15801561047a57600080fd5b505afa15801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b29190610de8565b92915050565b6001546001600160a01b031633146105125760405162461bcd60e51b815260206004820181905260248201527f676f7665726e61626c652f6f6e6c792d70656e64696e672d676f7665726e6f7260448201526064016102cd565b61051a6107fb565b565b6000546001600160a01b031633146105465760405162461bcd60e51b81526004016102cd90610db1565b60048054610100600160a81b0319166101006001600160a01b0384160217905550565b6000546001600160a01b031633146105935760405162461bcd60e51b81526004016102cd90610db1565b6102df8161084b565b60045460ff16151581151514156105e15760405162461bcd60e51b81526020600482015260096024820152686e6f2d6368616e676560b81b60448201526064016102cd565b6004805460ff19168215159081179091556040519081527f0e2fb031ee032dc02d8011dc50b816eb450cf856abd8261680dac74f72165bd2906020015b60405180910390a150565b606061064f848484604051806060016040528060298152602001610e226029913961090d565b90505b9392505050565b6001600160a01b0383166106c75760405162461bcd60e51b815260206004820152602f60248201527f636f6c6c65637461626c652d647573742f63616e742d73656e642d647573742d60448201526e746f2d7a65726f2d6164647265737360881b60648201526084016102cd565b6106d2600283610a35565b156107365760405162461bcd60e51b815260206004820152602e60248201527f636f6c6c65637461626c652d647573742f746f6b656e2d69732d706172742d6f60448201526d198b5d1a194b5c1c9bdd1bd8dbdb60921b60648201526084016102cd565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1415610797576040516001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610791573d6000803e3d6000fd5b506107ab565b6107ab6001600160a01b0383168483610a57565b604080516001600160a01b038086168252841660208201529081018290527f1e34c1aee8e83c2dcc14c21bb4bfeea7f46c0c998cb797ac7cc4d7a18f5c656b9060600160405180910390a1505050565b60018054600080546001600160a01b03199081166001600160a01b0384161782559091169091556040517f7880f0fcc848e1f26e461654b100a69f8d0641e29aa29f6596c6afadbb36b5ea9190a1565b6001600160a01b0381166108bf5760405162461bcd60e51b815260206004820152603560248201527f676f7665726e61626c652f70656e64696e672d676f7665726e6f722d73686f756044820152746c642d6e6f742d62652d7a65726f2d61646472657360581b60648201526084016102cd565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f56bddfa0cee9697cebddf9acd7f23dc6583663b05e007b877056d05017994def9060200161061e565b60608247101561096e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102cd565b843b6109bc5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102cd565b600080866001600160a01b031685876040516109d89190610e05565b60006040518083038185875af1925050503d8060008114610a15576040519150601f19603f3d011682016040523d82523d6000602084013e610a1a565b606091505b5091509150610a2a828286610aa9565b979650505050505050565b6001600160a01b03811660009081526001830160205260408120541515610652565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610424908490610ae2565b60608315610ab8575081610652565b825115610ac85782518084602001fd5b8160405162461bcd60e51b81526004016102cd9190610d47565b6000610b37826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610bb49092919063ffffffff16565b8051909150156104245780806020019051810190610b559190610de8565b6104245760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102cd565b606061064f848460008561090d565b80151581146102df57600080fd5b600060208284031215610be357600080fd5b813561065281610bc3565b80356001600160a01b0381168114610c0557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610c3557600080fd5b610c3e84610bee565b9250602084013567ffffffffffffffff80821115610c5b57600080fd5b818601915086601f830112610c6f57600080fd5b813581811115610c8157610c81610c0a565b604051601f8201601f19908116603f01168101908382118183101715610ca957610ca9610c0a565b81604052828152896020848701011115610cc257600080fd5b826020860160208301376000602084830101528096505050505050604084013590509250925092565b60005b83811015610d06578181015183820152602001610cee565b83811115610d15576000848401525b50505050565b60008151808452610d33816020860160208601610ceb565b601f01601f19169290920160200192915050565b6020815260006106526020830184610d1b565b600080600060608486031215610d6f57600080fd5b610d7884610bee565b9250610d8660208501610bee565b9150604084013590509250925092565b600060208284031215610da857600080fd5b61065282610bee565b60208082526018908201527f676f7665726e61626c652f6f6e6c792d676f7665726e6f720000000000000000604082015260600190565b600060208284031215610dfa57600080fd5b815161065281610bc3565b60008251610e17818460208701610ceb565b919091019291505056fe416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564a26469706673582212209b92c97858f236a246a5edd6b219229d14e8044d6a22295289879c611cbfc57f64736f6c63430008090033";

type StrategistsBlockProtectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategistsBlockProtectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategistsBlockProtection__factory extends ContractFactory {
  constructor(...args: StrategistsBlockProtectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _mechanicsRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StrategistsBlockProtection> {
    return super.deploy(
      _mechanicsRegistry,
      overrides || {}
    ) as Promise<StrategistsBlockProtection>;
  }
  getDeployTransaction(
    _mechanicsRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_mechanicsRegistry, overrides || {});
  }
  attach(address: string): StrategistsBlockProtection {
    return super.attach(address) as StrategistsBlockProtection;
  }
  connect(signer: Signer): StrategistsBlockProtection__factory {
    return super.connect(signer) as StrategistsBlockProtection__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategistsBlockProtectionInterface {
    return new utils.Interface(_abi) as StrategistsBlockProtectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategistsBlockProtection {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StrategistsBlockProtection;
  }
}
