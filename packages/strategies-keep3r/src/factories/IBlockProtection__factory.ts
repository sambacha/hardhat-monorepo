/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IBlockProtection,
  IBlockProtectionInterface,
} from "../IBlockProtection";

const _abi = [
  {
    inputs: [],
    name: "InvalidBlock",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "callWithBlockProtection",
    outputs: [
      {
        internalType: "bytes",
        name: "_returnData",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

export class IBlockProtection__factory {
  static readonly abi = _abi;
  static createInterface(): IBlockProtectionInterface {
    return new utils.Interface(_abi) as IBlockProtectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBlockProtection {
    return new Contract(address, _abi, signerOrProvider) as IBlockProtection;
  }
}
