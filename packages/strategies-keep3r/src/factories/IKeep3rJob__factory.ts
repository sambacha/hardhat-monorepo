/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IKeep3rJob, IKeep3rJobInterface } from "../IKeep3rJob";

const _abi = [
  {
    inputs: [],
    name: "getWorkData",
    outputs: [
      {
        internalType: "bytes",
        name: "_workData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3rProxyJob",
    outputs: [
      {
        internalType: "address",
        name: "_keep3rProxyJob",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxGasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "_maxGasPrice",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_workData",
        type: "bytes",
      },
    ],
    name: "work",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "workable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IKeep3rJob__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rJobInterface {
    return new utils.Interface(_abi) as IKeep3rJobInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rJob {
    return new Contract(address, _abi, signerOrProvider) as IKeep3rJob;
  }
}
