/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StrategyCurveYVoterProxy,
  StrategyCurveYVoterProxyInterface,
} from "../StrategyCurveYVoterProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfWant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "crv",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curve",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dai",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "gauge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "harvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keepCRV",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keepCRVMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performanceFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "performanceMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxy",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_governance",
        type: "address",
      },
    ],
    name: "setGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_keepCRV",
        type: "uint256",
      },
    ],
    name: "setKeepCRV",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_performanceFee",
        type: "uint256",
      },
    ],
    name: "setPerformanceFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxy",
        type: "address",
      },
    ],
    name: "setProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategist",
        type: "address",
      },
    ],
    name: "setStrategist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_withdrawalFee",
        type: "uint256",
      },
    ],
    name: "setWithdrawalFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "uni",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "voter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "want",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_asset",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAll",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawalMax",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ydai",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526103e86000556101f4600155603260025534801561002157600080fd5b50604051611fa1380380611fa183398101604081905261004091610080565b60048054336001600160a01b03199182168117909255600680548216909217909155600580549091166001600160a01b03929092169190911790556100b0565b60006020828403121561009257600080fd5b81516001600160a01b03811681146100a957600080fd5b9392505050565b611ee2806100bf6000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063853828b611610125578063c1a3d44c116100ad578063e9751f6b1161007c578063e9751f6b14610395578063ec5568891461045e578063edc9af9514610471578063f4b9fa751461048c578063f77c4791146104a757600080fd5b8063c1a3d44c1461043b578063c7b9d53014610443578063d0e30db014610456578063d5c1ff731461039557600080fd5b8063955383bd116100f4578063955383bd146103d457806397107d6d146103e7578063a6f19c84146103fa578063ab033ea914610415578063ac1e50251461042857600080fd5b8063853828b6146103a757806387788782146103af5780638bc7e8c4146103b857806392eefe9b146103c157600080fd5b806346c96aac116101a857806370897b231161017757806370897b231461035f5780637165485d14610372578063722713f71461038d5780637cc79113146103955780637fef901a1461039e57600080fd5b806346c96aac1461030357806351cff8d91461031e5780635aa6e675146103315780636a4874a11461034457600080fd5b80632e1a7d4d116101e45780632e1a7d4d146102b0578063366cd4f3146102c55780633fc8cef3146102e05780634641257d146102fb57600080fd5b8063115880861461021657806317d7de7c146102315780631f1fcd51146102705780631fe4a6861461029d575b600080fd5b61021e6104ba565b6040519081526020015b60405180910390f35b604080518082018252601881527f5374726174656779437572766559566f74657250726f78790000000000000000602082015290516102289190611c0b565b610285600080516020611e8d83398151915281565b6040516001600160a01b039091168152602001610228565b600654610285906001600160a01b031681565b6102c36102be366004611c3e565b610550565b005b6102857316de59092dae5ccf4a1e6439d611fd0653f0bd0181565b61028573c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b6102c36107e0565b61028573f147b8125d2ef93fb6965db97d6746952a13393481565b61021e61032c366004611c6c565b610fbc565b600454610285906001600160a01b031681565b61028573d533a949740bb3306d119cc777fa900ba034cd5281565b6102c361036d366004611c3e565b6111ce565b6102857345f783cce6b7ff23b2ab2d70e416cdb7d6055f5181565b61021e6111fd565b61021e61271081565b61021e60005481565b61021e611219565b61021e60015481565b61021e60025481565b6102c36103cf366004611c6c565b6113b7565b6102c36103e2366004611c3e565b611403565b6102c36103f5366004611c6c565b611432565b61028573fa712ee4788c042e2b7bb55e6cb8ec569c4530c181565b6102c3610423366004611c6c565b61147e565b6102c3610436366004611c3e565b6114ca565b61021e6114f9565b6102c3610451366004611c6c565b61152d565b6102c3611579565b600354610285906001600160a01b031681565b610285737a250d5630b4cf539739df2c5dacb4c659f2488d81565b610285736b175474e89094c44da98b954eedeac495271d0f81565b600554610285906001600160a01b031681565b6003546040516370a0823160e01b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201526000916001600160a01b0316906370a08231906024015b60206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b9190611c89565b905090565b6005546001600160a01b031633146105835760405162461bcd60e51b815260040161057a90611ca2565b60405180910390fd5b6040516370a0823160e01b8152306004820152600090600080516020611e8d833981519152906370a082319060240160206040518083038186803b1580156105ca57600080fd5b505afa1580156105de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106029190611c89565b90508181101561062d5761061e6106198284611cdd565b6116af565b915061062a8183611cf4565b91505b6000612710600254846106409190611d0c565b61064a9190611d2b565b90506106eb600560009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561069d57600080fd5b505afa1580156106b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d59190611d4d565b600080516020611e8d8339815191529083611762565b600554604051632988bb9f60e21b8152600080516020611e8d83398151915260048201526000916001600160a01b03169063a622ee7c9060240160206040518083038186803b15801561073d57600080fd5b505afa158015610751573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107759190611d4d565b90506001600160a01b0381166107b65760405162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015260640161057a565b6107da816107c48487611cdd565b600080516020611e8d8339815191529190611762565b50505050565b6006546001600160a01b031633148061080357506004546001600160a01b031633145b61083d5760405162461bcd60e51b815260206004820152600b60248201526a08585d5d1a1bdc9a5e995960aa1b604482015260640161057a565b60035460405163072e008f60e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c160048201526001600160a01b0390911690630e5c011e90602401600060405180830381600087803b15801561089657600080fd5b505af11580156108aa573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201526000925073d533a949740bb3306d119cc777fa900ba034cd5291506370a082319060240160206040518083038186803b1580156108fb57600080fd5b505afa15801561090f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109339190611c89565b90508015610b735760006127106000548361094e9190611d0c565b6109589190611d2b565b905061098d73d533a949740bb3306d119cc777fa900ba034cd5273f147b8125d2ef93fb6965db97d6746952a13393483611762565b6109978183611cdd565b91506109cd73d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d60006117ca565b610a0073d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d846117ca565b604080516003808252608082019092526000916020820160608036833701905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610a4b57610a4b611d6a565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610a9357610a93611d6a565b60200260200101906001600160a01b031690816001600160a01b031681525050736b175474e89094c44da98b954eedeac495271d0f81600281518110610adb57610adb611d6a565b6001600160a01b0390921660209283029190910190910152737a250d5630b4cf539739df2c5dacb4c659f2488d6338ed17398460008430610b1e42610708611cf4565b6040518663ffffffff1660e01b8152600401610b3e959493929190611d80565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b5050505050505b6040516370a0823160e01b8152306004820152600090736b175474e89094c44da98b954eedeac495271d0f906370a082319060240160206040518083038186803b158015610bc057600080fd5b505afa158015610bd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf89190611c89565b90508015610ccd57610c34736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd0160006117ca565b610c67736b175474e89094c44da98b954eedeac495271d0f7316de59092dae5ccf4a1e6439d611fd0653f0bd01836117ca565b60405163b6b55f2560e01b8152600481018290527316de59092dae5ccf4a1e6439d611fd0653f0bd019063b6b55f2590602401600060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526000907316de59092dae5ccf4a1e6439d611fd0653f0bd01906370a082319060240160206040518083038186803b158015610d1a57600080fd5b505afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d529190611c89565b90508015610e4d57610d8e7316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f5160006117ca565b610dc17316de59092dae5ccf4a1e6439d611fd0653f0bd017345f783cce6b7ff23b2ab2d70e416cdb7d6055f51836117ca565b6040805160808101825282815260006020820181905281830181905260608201819052915162a6cbcd60e21b81527345f783cce6b7ff23b2ab2d70e416cdb7d6055f519263029b2f3492610e1a92909190600401611df1565b600060405180830381600087803b158015610e3457600080fd5b505af1158015610e48573d6000803e3d6000fd5b505050505b6040516370a0823160e01b8152306004820152600090600080516020611e8d833981519152906370a082319060240160206040518083038186803b158015610e9457600080fd5b505afa158015610ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ecc9190611c89565b90508015610f4e57600061271060015483610ee79190611d0c565b610ef19190611d2b565b9050610f44600560009054906101000a90046001600160a01b03166001600160a01b0316639ec5a8946040518163ffffffff1660e01b815260040160206040518083038186803b15801561069d57600080fd5b610f4c611579565b505b600360009054906101000a90046001600160a01b03166001600160a01b031663f83d08ba6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610f9e57600080fd5b505af1158015610fb2573d6000803e3d6000fd5b5050505050505050565b6005546000906001600160a01b03163314610fe95760405162461bcd60e51b815260040161057a90611ca2565b600080516020611e8d8339815191526001600160a01b03831614156110395760405162461bcd60e51b815260040161057a906020808252600490820152631dd85b9d60e21b604082015260600190565b73d533a949740bb3306d119cc777fa900ba034cd526001600160a01b038316141561108c5760405162461bcd60e51b815260206004820152600360248201526231b93b60e91b604482015260640161057a565b7316de59092dae5ccf4a1e6439d611fd0653f0bd016001600160a01b03831614156110e25760405162461bcd60e51b815260040161057a906020808252600490820152637964616960e01b604082015260600190565b736b175474e89094c44da98b954eedeac495271d0f6001600160a01b03831614156111355760405162461bcd60e51b815260206004820152600360248201526264616960e81b604482015260640161057a565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b15801561117457600080fd5b505afa158015611188573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ac9190611c89565b6005549091506111c9906001600160a01b03848116911683611762565b919050565b6004546001600160a01b031633146111f85760405162461bcd60e51b815260040161057a90611e29565b600155565b60006112076104ba565b61120f6114f9565b61054b9190611cf4565b6005546000906001600160a01b031633146112465760405162461bcd60e51b815260040161057a90611ca2565b61124e6118ee565b6040516370a0823160e01b8152306004820152600080516020611e8d833981519152906370a082319060240160206040518083038186803b15801561129257600080fd5b505afa1580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190611c89565b600554604051632988bb9f60e21b8152600080516020611e8d83398151915260048201529192506000916001600160a01b039091169063a622ee7c9060240160206040518083038186803b15801561132157600080fd5b505afa158015611335573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113599190611d4d565b90506001600160a01b03811661139a5760405162461bcd60e51b8152602060048201526006602482015265085d985d5b1d60d21b604482015260640161057a565b6113b3600080516020611e8d8339815191528284611762565b5090565b6004546001600160a01b031633146113e15760405162461bcd60e51b815260040161057a90611e29565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b0316331461142d5760405162461bcd60e51b815260040161057a90611e29565b600055565b6004546001600160a01b0316331461145c5760405162461bcd60e51b815260040161057a90611e29565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031633146114a85760405162461bcd60e51b815260040161057a90611e29565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6004546001600160a01b031633146114f45760405162461bcd60e51b815260040161057a90611e29565b600255565b6040516370a0823160e01b8152306004820152600090600080516020611e8d833981519152906370a08231906024016104fb565b6004546001600160a01b031633146115575760405162461bcd60e51b815260040161057a90611e29565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6040516370a0823160e01b8152306004820152600090600080516020611e8d833981519152906370a082319060240160206040518083038186803b1580156115c057600080fd5b505afa1580156115d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f89190611c89565b905080156116ac5760035461162690600080516020611e8d833981519152906001600160a01b031683611762565b600354604051631f2c13e160e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c16004820152600080516020611e8d83398151915260248201526001600160a01b039091169063f9609f0890604401600060405180830381600087803b15801561169357600080fd5b505af11580156116a7573d6000803e3d6000fd5b505050505b50565b600354604051636ce5768960e11b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c16004820152600080516020611e8d8339815191526024820152604481018390526000916001600160a01b03169063d9caed1290606401602060405180830381600087803b15801561172457600080fd5b505af1158015611738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061175c9190611c89565b92915050565b6040516001600160a01b0383166024820152604481018290526117c590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611993565b505050565b8015806118535750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561181957600080fd5b505afa15801561182d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118519190611c89565b155b6118be5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161057a565b6040516001600160a01b0383166024820152604481018290526117c590849063095ea7b360e01b9060640161178e565b6003546040516301395c5960e31b815273fa712ee4788c042e2b7bb55e6cb8ec569c4530c16004820152600080516020611e8d83398151915260248201526001600160a01b03909116906309cae2c890604401602060405180830381600087803b15801561195b57600080fd5b505af115801561196f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ac9190611c89565b60006119e8826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a659092919063ffffffff16565b8051909150156117c55780806020019051810190611a069190611e4e565b6117c55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161057a565b6060611a748484600085611a7e565b90505b9392505050565b606082471015611adf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161057a565b843b611b2d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161057a565b600080866001600160a01b03168587604051611b499190611e70565b60006040518083038185875af1925050503d8060008114611b86576040519150601f19603f3d011682016040523d82523d6000602084013e611b8b565b606091505b5091509150611b9b828286611ba6565b979650505050505050565b60608315611bb5575081611a77565b825115611bc55782518084602001fd5b8160405162461bcd60e51b815260040161057a9190611c0b565b60005b83811015611bfa578181015183820152602001611be2565b838111156107da5750506000910152565b6020815260008251806020840152611c2a816040850160208701611bdf565b601f01601f19169190910160400192915050565b600060208284031215611c5057600080fd5b5035919050565b6001600160a01b03811681146116ac57600080fd5b600060208284031215611c7e57600080fd5b8135611a7781611c57565b600060208284031215611c9b57600080fd5b5051919050565b6020808252600b908201526a10b1b7b73a3937b63632b960a91b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082821015611cef57611cef611cc7565b500390565b60008219821115611d0757611d07611cc7565b500190565b6000816000190483118215151615611d2657611d26611cc7565b500290565b600082611d4857634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611d5f57600080fd5b8151611a7781611c57565b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611dd05784516001600160a01b031683529383019391830191600101611dab565b50506001600160a01b03969096166060850152505050608001529392505050565b60a08101818460005b6004811015611e19578151835260209283019290910190600101611dfa565b5050508260808301529392505050565b6020808252600b908201526a21676f7665726e616e636560a81b604082015260600190565b600060208284031215611e6057600080fd5b81518015158114611a7757600080fd5b60008251611e82818460208701611bdf565b919091019291505056fe000000000000000000000000df5e0e81dff6faf3a7e52ba697820c5e32d806a8a2646970667358221220886294334533cc4d49f727b38c6ec2296c49b6e622eaade535ded56e4c9e53f764736f6c63430008090033";

type StrategyCurveYVoterProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StrategyCurveYVoterProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StrategyCurveYVoterProxy__factory extends ContractFactory {
  constructor(...args: StrategyCurveYVoterProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _controller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StrategyCurveYVoterProxy> {
    return super.deploy(
      _controller,
      overrides || {}
    ) as Promise<StrategyCurveYVoterProxy>;
  }
  getDeployTransaction(
    _controller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, overrides || {});
  }
  attach(address: string): StrategyCurveYVoterProxy {
    return super.attach(address) as StrategyCurveYVoterProxy;
  }
  connect(signer: Signer): StrategyCurveYVoterProxy__factory {
    return super.connect(signer) as StrategyCurveYVoterProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StrategyCurveYVoterProxyInterface {
    return new utils.Interface(_abi) as StrategyCurveYVoterProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StrategyCurveYVoterProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StrategyCurveYVoterProxy;
  }
}
