/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IKeep3rEscrowJob,
  IKeep3rEscrowJobInterface,
} from "../IKeep3rEscrowJob";

const _abi = [
  {
    anonymous: false,
    inputs: [],
    name: "ForceWorked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Worked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
    ],
    name: "acceptGovernorOnEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
    ],
    name: "addLiquidityToJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
    ],
    name: "applyCreditToJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "forceWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNextAction",
    outputs: [
      {
        internalType: "contract IKeep3rEscrow",
        name: "Escrow",
        type: "address",
      },
      {
        internalType: "enum IKeep3rEscrowJob.Actions",
        name: "_action",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
    ],
    name: "removeLiquidityFromJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
    ],
    name: "returnLPsToGovernance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "sendDustOnEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pendingGovernor",
        type: "address",
      },
    ],
    name: "setPendingGovernorOnEscrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrow",
        type: "address",
      },
    ],
    name: "unbondLiquidityFromJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IKeep3rEscrowJob__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rEscrowJobInterface {
    return new utils.Interface(_abi) as IKeep3rEscrowJobInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rEscrowJob {
    return new Contract(address, _abi, signerOrProvider) as IKeep3rEscrowJob;
  }
}
