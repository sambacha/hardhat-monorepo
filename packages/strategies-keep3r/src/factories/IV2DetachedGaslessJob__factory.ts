/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IV2DetachedGaslessJob,
  IV2DetachedGaslessJobInterface,
} from "../IV2DetachedGaslessJob";

const _abi = [
  {
    inputs: [],
    name: "MultiplierExceedsMax",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWorkable",
    type: "error",
  },
  {
    inputs: [],
    name: "NotZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ParametersDifferentLength",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyAlreadyAdded",
    type: "error",
  },
  {
    inputs: [],
    name: "StrategyNotAdded",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "ForceWorked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "StrategyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "StrategyModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "StrategyRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
    ],
    name: "Worked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_strategy",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_costTokens",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_costPairs",
        type: "address[]",
      },
    ],
    name: "addStrategies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_costToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_costPair",
        type: "address",
      },
    ],
    name: "addStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "forceWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "removeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_v2Keeper",
        type: "address",
      },
    ],
    name: "setV2Keep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_workCooldown",
        type: "uint256",
      },
    ],
    name: "setWorkCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_v2Keeper",
        type: "address",
      },
    ],
    name: "setYOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategies",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "address",
        name: "_costToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_costPair",
        type: "address",
      },
    ],
    name: "updateCostTokenAndPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "work",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "workable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IV2DetachedGaslessJob__factory {
  static readonly abi = _abi;
  static createInterface(): IV2DetachedGaslessJobInterface {
    return new utils.Interface(_abi) as IV2DetachedGaslessJobInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IV2DetachedGaslessJob {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IV2DetachedGaslessJob;
  }
}
