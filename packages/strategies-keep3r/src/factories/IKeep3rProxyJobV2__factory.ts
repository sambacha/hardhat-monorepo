/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IKeep3rProxyJobV2,
  IKeep3rProxyJobV2Interface,
} from "../IKeep3rProxyJobV2";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxCredits",
        type: "uint256",
      },
    ],
    name: "AddValidJob",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_bond",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_minBond",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_earned",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_onlyEOA",
        type: "bool",
      },
    ],
    name: "Keep3rRequirementsSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "Keep3rSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "RemoveValidJob",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_maxCredits",
        type: "uint256",
      },
    ],
    name: "SetJobMaxCredits",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "SetJobRewardMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_workForTokens",
        type: "bool",
      },
    ],
    name: "Worked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxCredits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "addValidJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "age",
    outputs: [
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bond",
    outputs: [
      {
        internalType: "address",
        name: "_bond",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "_earned",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "isValidJob",
    outputs: [
      {
        internalType: "bool",
        name: "_valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jobs",
    outputs: [
      {
        internalType: "address[]",
        name: "validJobs",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "keep3r",
    outputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "maxCredits",
    outputs: [
      {
        internalType: "uint256",
        name: "_maxCredits",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBond",
    outputs: [
      {
        internalType: "uint256",
        name: "_minBond",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "onlyEOA",
    outputs: [
      {
        internalType: "bool",
        name: "_onlyEOA",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "removeValidJob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "rewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_maxCredits",
        type: "uint256",
      },
    ],
    name: "setJobMaxCredits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "setJobRewardMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_keep3r",
        type: "address",
      },
    ],
    name: "setKeep3r",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bond",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minBond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_earned",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_onlyEOA",
        type: "bool",
      },
    ],
    name: "setKeep3rRequirements",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "usedCredits",
    outputs: [
      {
        internalType: "uint256",
        name: "_usedCredits",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_workData",
        type: "bytes",
      },
    ],
    name: "work",
    outputs: [
      {
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_workData",
        type: "bytes",
      },
    ],
    name: "workForBond",
    outputs: [
      {
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_workData",
        type: "bytes",
      },
    ],
    name: "workForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_job",
        type: "address",
      },
    ],
    name: "workable",
    outputs: [
      {
        internalType: "bool",
        name: "_workable",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IKeep3rProxyJobV2__factory {
  static readonly abi = _abi;
  static createInterface(): IKeep3rProxyJobV2Interface {
    return new utils.Interface(_abi) as IKeep3rProxyJobV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IKeep3rProxyJobV2 {
    return new Contract(address, _abi, signerOrProvider) as IKeep3rProxyJobV2;
  }
}
