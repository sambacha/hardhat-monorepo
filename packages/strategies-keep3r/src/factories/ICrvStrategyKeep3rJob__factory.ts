/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ICrvStrategyKeep3rJob,
  ICrvStrategyKeep3rJobInterface,
} from "../ICrvStrategyKeep3rJob";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "ForceWorked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "SetRewardMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_requiredHarvest",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "StrategyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_requiredHarvest",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "StrategyModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "StrategyRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
    ],
    name: "Worked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_strategies",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_requiredHarvests",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_requiredEarns",
        type: "uint256[]",
      },
    ],
    name: "addStrategies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requiredHarvest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "addStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "calculateHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "forceWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "harvestCooldown",
    outputs: [
      {
        internalType: "uint256",
        name: "_harvestCooldown",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "_lastHarvest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "lastWorkAt",
    outputs: [
      {
        internalType: "uint256",
        name: "_lastWorkAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxHarvestPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "_maxHarvestPeriod",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "removeStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "requiredEarn",
    outputs: [
      {
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "requiredHarvest",
    outputs: [
      {
        internalType: "uint256",
        name: "_requiredHarvest",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_harvestCooldown",
        type: "uint256",
      },
    ],
    name: "setHarvestCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxHarvestPeriod",
        type: "uint256",
      },
    ],
    name: "setMaxHarvestPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "setRewardMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strategies",
    outputs: [
      {
        internalType: "address[]",
        name: "_strategies",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_strategies",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_requiredHarvests",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_requiredEarns",
        type: "uint256[]",
      },
    ],
    name: "updateStrategies",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requiredHarvest",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "updateStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "work",
    outputs: [
      {
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_strategy",
        type: "address",
      },
    ],
    name: "workable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICrvStrategyKeep3rJob__factory {
  static readonly abi = _abi;
  static createInterface(): ICrvStrategyKeep3rJobInterface {
    return new utils.Interface(_abi) as ICrvStrategyKeep3rJobInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICrvStrategyKeep3rJob {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ICrvStrategyKeep3rJob;
  }
}
