/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IVaultKeep3rJob,
  IVaultKeep3rJobInterface,
} from "../IVaultKeep3rJob";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "ForceWorked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "SetRewardMultiplier",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "VaultAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "VaultModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "VaultRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_keeper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
    ],
    name: "Worked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "addVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_vaults",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_requiredEarns",
        type: "uint256[]",
      },
    ],
    name: "addVaults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "calculateEarn",
    outputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "forceWork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "removeVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_earnCooldown",
        type: "uint256",
      },
    ],
    name: "setEarnCooldown",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rewardMultiplier",
        type: "uint256",
      },
    ],
    name: "setRewardMultiplier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_requiredEarn",
        type: "uint256",
      },
    ],
    name: "updateVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_vaults",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_requiredEarns",
        type: "uint256[]",
      },
    ],
    name: "updateVaults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaults",
    outputs: [
      {
        internalType: "address[]",
        name: "_vaults",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "work",
    outputs: [
      {
        internalType: "uint256",
        name: "_credits",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "workable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IVaultKeep3rJob__factory {
  static readonly abi = _abi;
  static createInterface(): IVaultKeep3rJobInterface {
    return new utils.Interface(_abi) as IVaultKeep3rJobInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IVaultKeep3rJob {
    return new Contract(address, _abi, signerOrProvider) as IVaultKeep3rJob;
  }
}
