/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IOnlyStealthRelayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOnlyStealthRelayer__factory>;
    getContractFactory(
      name: "OnlyStealthRelayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyStealthRelayer__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "MachineryReady",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MachineryReady__factory>;
    getContractFactory(
      name: "UtilsReady",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UtilsReady__factory>;
    getContractFactory(
      name: "IUtilsReady",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUtilsReady__factory>;
    getContractFactory(
      name: "IKeep3r",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3r__factory>;
    getContractFactory(
      name: "IKeep3rV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rV1__factory>;
    getContractFactory(
      name: "IKeep3rV1Helper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rV1Helper__factory>;
    getContractFactory(
      name: "IMechanicsRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMechanicsRegistry__factory>;
    getContractFactory(
      name: "ICollectableDust",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICollectableDust__factory>;
    getContractFactory(
      name: "IGovernable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernable__factory>;
    getContractFactory(
      name: "IMachinery",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMachinery__factory>;
    getContractFactory(
      name: "IManageable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IManageable__factory>;
    getContractFactory(
      name: "IPausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPausable__factory>;
    getContractFactory(
      name: "Keep3r",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Keep3r__factory>;
    getContractFactory(
      name: "CollectableDust",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CollectableDust__factory>;
    getContractFactory(
      name: "Governable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governable__factory>;
    getContractFactory(
      name: "Machinery",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Machinery__factory>;
    getContractFactory(
      name: "Manageable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Manageable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "IStealthSafeGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStealthSafeGuard__factory>;
    getContractFactory(
      name: "StealthSafeGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StealthSafeGuard__factory>;
    getContractFactory(
      name: "ICrvClaimable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrvClaimable__factory>;
    getContractFactory(
      name: "ICrvStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrvStrategy__factory>;
    getContractFactory(
      name: "ICurveClaimableTokensHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurveClaimableTokensHelper__factory>;
    getContractFactory(
      name: "IDforceStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDforceStrategy__factory>;
    getContractFactory(
      name: "IDRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDRewards__factory>;
    getContractFactory(
      name: "GnosisSafe",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GnosisSafe__factory>;
    getContractFactory(
      name: "IGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGuard__factory>;
    getContractFactory(
      name: "IV2DetachedGaslessJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2DetachedGaslessJob__factory>;
    getContractFactory(
      name: "IV2DetachedJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2DetachedJob__factory>;
    getContractFactory(
      name: "ICrvStrategyKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrvStrategyKeep3rJob__factory>;
    getContractFactory(
      name: "ICrvStrategyKeep3rJobV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrvStrategyKeep3rJobV2__factory>;
    getContractFactory(
      name: "IKeep3rEscrowJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rEscrowJob__factory>;
    getContractFactory(
      name: "IKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rJob__factory>;
    getContractFactory(
      name: "IVaultKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultKeep3rJob__factory>;
    getContractFactory(
      name: "IV2Keep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2Keep3rJob__factory>;
    getContractFactory(
      name: "IV2Keep3rStealthJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2Keep3rStealthJob__factory>;
    getContractFactory(
      name: "IV2Keeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2Keeper__factory>;
    getContractFactory(
      name: "IV2MultiQueueKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2MultiQueueKeep3rJob__factory>;
    getContractFactory(
      name: "IV2QueueKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2QueueKeep3rJob__factory>;
    getContractFactory(
      name: "IChainLinkFeed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IChainLinkFeed__factory>;
    getContractFactory(
      name: "ICrvStrategyKeep3r",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICrvStrategyKeep3r__factory>;
    getContractFactory(
      name: "IDforceStrategyKeep3r",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDforceStrategyKeep3r__factory>;
    getContractFactory(
      name: "IKeep3rEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rEscrow__factory>;
    getContractFactory(
      name: "IKeep3rV2OracleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rV2OracleFactory__factory>;
    getContractFactory(
      name: "IStrategyKeep3r",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStrategyKeep3r__factory>;
    getContractFactory(
      name: "IUniquoteKeep3rEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniquoteKeep3rEscrow__factory>;
    getContractFactory(
      name: "IUniswapV2SlidingOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2SlidingOracle__factory>;
    getContractFactory(
      name: "IOracleBondedKeeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracleBondedKeeper__factory>;
    getContractFactory(
      name: "IPartialKeep3rV1OracleJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPartialKeep3rV1OracleJob__factory>;
    getContractFactory(
      name: "ISimpleOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISimpleOracle__factory>;
    getContractFactory(
      name: "IYOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IYOracle__factory>;
    getContractFactory(
      name: "IKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rJob__factory>;
    getContractFactory(
      name: "IKeep3rProxyJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rProxyJob__factory>;
    getContractFactory(
      name: "IKeep3rProxyJobV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKeep3rProxyJobV2__factory>;
    getContractFactory(
      name: "IStealthRelayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStealthRelayer__factory>;
    getContractFactory(
      name: "IStealthTx",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStealthTx__factory>;
    getContractFactory(
      name: "IStealthVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStealthVault__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IBaseFee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseFee__factory>;
    getContractFactory(
      name: "IGasPriceLimited",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGasPriceLimited__factory>;
    getContractFactory(
      name: "IGovernableAndManageable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernableAndManageable__factory>;
    getContractFactory(
      name: "IBaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBaseStrategy__factory>;
    getContractFactory(
      name: "IEarnableVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEarnableVault__factory>;
    getContractFactory(
      name: "IHarvestableStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHarvestableStrategy__factory>;
    getContractFactory(
      name: "IV1Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV1Controller__factory>;
    getContractFactory(
      name: "IV1Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV1Registry__factory>;
    getContractFactory(
      name: "IV1Strategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV1Strategy__factory>;
    getContractFactory(
      name: "IV1Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV1Vault__factory>;
    getContractFactory(
      name: "IV2Registry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2Registry__factory>;
    getContractFactory(
      name: "IV2Vault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IV2Vault__factory>;
    getContractFactory(
      name: "BaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategy__factory>;
    getContractFactory(
      name: "BaseStrategyInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategyInitializable__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IGenericLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGenericLender__factory>;
    getContractFactory(
      name: "IUni",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUni__factory>;
    getContractFactory(
      name: "IWantToEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWantToEth__factory>;
    getContractFactory(
      name: "Strategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strategy__factory>;
    getContractFactory(
      name: "VaultAPI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultAPI__factory>;
    getContractFactory(
      name: "BaseStrategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategy__factory>;
    getContractFactory(
      name: "BaseStrategyInitializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseStrategyInitializable__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IGenericLender",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGenericLender__factory>;
    getContractFactory(
      name: "IUni",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUni__factory>;
    getContractFactory(
      name: "IWantToEth",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWantToEth__factory>;
    getContractFactory(
      name: "Strategy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strategy__factory>;
    getContractFactory(
      name: "VaultAPI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultAPI__factory>;
    getContractFactory(
      name: "VaultAPI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultAPI__factory>;
    getContractFactory(
      name: "CrvStrategyKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrvStrategyKeep3rJob__factory>;
    getContractFactory(
      name: "CrvStrategyKeep3rStealthJob2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CrvStrategyKeep3rStealthJob2__factory>;
    getContractFactory(
      name: "HarvestV2DetachedGaslessJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HarvestV2DetachedGaslessJob__factory>;
    getContractFactory(
      name: "TendV2DetachedGaslessJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TendV2DetachedGaslessJob__factory>;
    getContractFactory(
      name: "V2DetachedGaslessJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2DetachedGaslessJob__factory>;
    getContractFactory(
      name: "HarvestV2DetachedJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HarvestV2DetachedJob__factory>;
    getContractFactory(
      name: "TendV2DetachedJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TendV2DetachedJob__factory>;
    getContractFactory(
      name: "V2DetachedJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2DetachedJob__factory>;
    getContractFactory(
      name: "HarvestV2Keep3rStealthJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HarvestV2Keep3rStealthJob__factory>;
    getContractFactory(
      name: "HarvestV2QueueKeep3rStealthJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HarvestV2QueueKeep3rStealthJob__factory>;
    getContractFactory(
      name: "TendV2Keep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TendV2Keep3rJob__factory>;
    getContractFactory(
      name: "TendV2Keep3rStealthJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TendV2Keep3rStealthJob__factory>;
    getContractFactory(
      name: "V2Keep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2Keep3rJob__factory>;
    getContractFactory(
      name: "V2Keep3rPublicJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2Keep3rPublicJob__factory>;
    getContractFactory(
      name: "V2Keep3rStealthJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2Keep3rStealthJob__factory>;
    getContractFactory(
      name: "V2Keeper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2Keeper__factory>;
    getContractFactory(
      name: "V2QueueKeep3rStealthJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.V2QueueKeep3rStealthJob__factory>;
    getContractFactory(
      name: "VaultKeep3rJob",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultKeep3rJob__factory>;
    getContractFactory(
      name: "ERC20Mock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Mock__factory>;
    getContractFactory(
      name: "ERC20Token",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Token__factory>;
    getContractFactory(
      name: "GenericKeep3rV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GenericKeep3rV2__factory>;
    getContractFactory(
      name: "Context",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Context__factory>;
    getContractFactory(
      name: "Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controller__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Detailed__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "YVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YVault__factory>;
    getContractFactory(
      name: "Keep3rV2OracleFactoryWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Keep3rV2OracleFactoryWrapper__factory>;
    getContractFactory(
      name: "YUnsafeOracleV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YUnsafeOracleV1__factory>;
    getContractFactory(
      name: "ForceETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ForceETH__factory>;
    getContractFactory(
      name: "Gauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Gauge__factory>;
    getContractFactory(
      name: "IController",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IController__factory>;
    getContractFactory(
      name: "ICurveFi",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICurveFi__factory>;
    getContractFactory(
      name: "Mintr",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mintr__factory>;
    getContractFactory(
      name: "StrategyCurveYVoterProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StrategyCurveYVoterProxy__factory>;
    getContractFactory(
      name: "Uni",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Uni__factory>;
    getContractFactory(
      name: "VoterProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoterProxy__factory>;
    getContractFactory(
      name: "YERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.YERC20__factory>;
    getContractFactory(
      name: "Zap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Zap__factory>;
    getContractFactory(
      name: "Controller",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Controller__factory>;
    getContractFactory(
      name: "DERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DERC20__factory>;
    getContractFactory(
      name: "DRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DRewards__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "StrategyDForceUSDC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StrategyDForceUSDC__factory>;
    getContractFactory(
      name: "Uni",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Uni__factory>;
    getContractFactory(
      name: "Basefee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Basefee__factory>;
    getContractFactory(
      name: "BlockProtection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BlockProtection__factory>;
    getContractFactory(
      name: "IBlockProtection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBlockProtection__factory>;
    getContractFactory(
      name: "GasPriceLimited",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GasPriceLimited__factory>;
    getContractFactory(
      name: "Multicall2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Multicall2__factory>;
    getContractFactory(
      name: "IBlockProtection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBlockProtection__factory>;
    getContractFactory(
      name: "StrategistsBlockProtection",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StrategistsBlockProtection__factory>;
    getContractFactory(
      name: "IVaultsRegistryHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVaultsRegistryHelper__factory>;
    getContractFactory(
      name: "VaultsRegistryHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VaultsRegistryHelper__factory>;

    getContractAt(
      name: "IOnlyStealthRelayer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOnlyStealthRelayer>;
    getContractAt(
      name: "OnlyStealthRelayer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyStealthRelayer>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "MachineryReady",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MachineryReady>;
    getContractAt(
      name: "UtilsReady",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UtilsReady>;
    getContractAt(
      name: "IUtilsReady",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUtilsReady>;
    getContractAt(
      name: "IKeep3r",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3r>;
    getContractAt(
      name: "IKeep3rV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rV1>;
    getContractAt(
      name: "IKeep3rV1Helper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rV1Helper>;
    getContractAt(
      name: "IMechanicsRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMechanicsRegistry>;
    getContractAt(
      name: "ICollectableDust",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICollectableDust>;
    getContractAt(
      name: "IGovernable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernable>;
    getContractAt(
      name: "IMachinery",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMachinery>;
    getContractAt(
      name: "IManageable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IManageable>;
    getContractAt(
      name: "IPausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPausable>;
    getContractAt(
      name: "Keep3r",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Keep3r>;
    getContractAt(
      name: "CollectableDust",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CollectableDust>;
    getContractAt(
      name: "Governable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Governable>;
    getContractAt(
      name: "Machinery",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Machinery>;
    getContractAt(
      name: "Manageable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Manageable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "IStealthSafeGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStealthSafeGuard>;
    getContractAt(
      name: "StealthSafeGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StealthSafeGuard>;
    getContractAt(
      name: "ICrvClaimable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrvClaimable>;
    getContractAt(
      name: "ICrvStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrvStrategy>;
    getContractAt(
      name: "ICurveClaimableTokensHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurveClaimableTokensHelper>;
    getContractAt(
      name: "IDforceStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDforceStrategy>;
    getContractAt(
      name: "IDRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDRewards>;
    getContractAt(
      name: "GnosisSafe",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GnosisSafe>;
    getContractAt(
      name: "IGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGuard>;
    getContractAt(
      name: "IV2DetachedGaslessJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2DetachedGaslessJob>;
    getContractAt(
      name: "IV2DetachedJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2DetachedJob>;
    getContractAt(
      name: "ICrvStrategyKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrvStrategyKeep3rJob>;
    getContractAt(
      name: "ICrvStrategyKeep3rJobV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrvStrategyKeep3rJobV2>;
    getContractAt(
      name: "IKeep3rEscrowJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rEscrowJob>;
    getContractAt(
      name: "IKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rJob>;
    getContractAt(
      name: "IVaultKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultKeep3rJob>;
    getContractAt(
      name: "IV2Keep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2Keep3rJob>;
    getContractAt(
      name: "IV2Keep3rStealthJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2Keep3rStealthJob>;
    getContractAt(
      name: "IV2Keeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2Keeper>;
    getContractAt(
      name: "IV2MultiQueueKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2MultiQueueKeep3rJob>;
    getContractAt(
      name: "IV2QueueKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2QueueKeep3rJob>;
    getContractAt(
      name: "IChainLinkFeed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IChainLinkFeed>;
    getContractAt(
      name: "ICrvStrategyKeep3r",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICrvStrategyKeep3r>;
    getContractAt(
      name: "IDforceStrategyKeep3r",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDforceStrategyKeep3r>;
    getContractAt(
      name: "IKeep3rEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rEscrow>;
    getContractAt(
      name: "IKeep3rV2OracleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rV2OracleFactory>;
    getContractAt(
      name: "IStrategyKeep3r",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStrategyKeep3r>;
    getContractAt(
      name: "IUniquoteKeep3rEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniquoteKeep3rEscrow>;
    getContractAt(
      name: "IUniswapV2SlidingOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2SlidingOracle>;
    getContractAt(
      name: "IOracleBondedKeeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracleBondedKeeper>;
    getContractAt(
      name: "IPartialKeep3rV1OracleJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPartialKeep3rV1OracleJob>;
    getContractAt(
      name: "ISimpleOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISimpleOracle>;
    getContractAt(
      name: "IYOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IYOracle>;
    getContractAt(
      name: "IKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rJob>;
    getContractAt(
      name: "IKeep3rProxyJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rProxyJob>;
    getContractAt(
      name: "IKeep3rProxyJobV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKeep3rProxyJobV2>;
    getContractAt(
      name: "IStealthRelayer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStealthRelayer>;
    getContractAt(
      name: "IStealthTx",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStealthTx>;
    getContractAt(
      name: "IStealthVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStealthVault>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IBaseFee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseFee>;
    getContractAt(
      name: "IGasPriceLimited",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGasPriceLimited>;
    getContractAt(
      name: "IGovernableAndManageable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernableAndManageable>;
    getContractAt(
      name: "IBaseStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBaseStrategy>;
    getContractAt(
      name: "IEarnableVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEarnableVault>;
    getContractAt(
      name: "IHarvestableStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHarvestableStrategy>;
    getContractAt(
      name: "IV1Controller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV1Controller>;
    getContractAt(
      name: "IV1Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV1Registry>;
    getContractAt(
      name: "IV1Strategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV1Strategy>;
    getContractAt(
      name: "IV1Vault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV1Vault>;
    getContractAt(
      name: "IV2Registry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2Registry>;
    getContractAt(
      name: "IV2Vault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IV2Vault>;
    getContractAt(
      name: "BaseStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStrategy>;
    getContractAt(
      name: "BaseStrategyInitializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStrategyInitializable>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IGenericLender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGenericLender>;
    getContractAt(
      name: "IUni",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUni>;
    getContractAt(
      name: "IWantToEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWantToEth>;
    getContractAt(
      name: "Strategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Strategy>;
    getContractAt(
      name: "VaultAPI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultAPI>;
    getContractAt(
      name: "BaseStrategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStrategy>;
    getContractAt(
      name: "BaseStrategyInitializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseStrategyInitializable>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IGenericLender",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IGenericLender>;
    getContractAt(
      name: "IUni",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUni>;
    getContractAt(
      name: "IWantToEth",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWantToEth>;
    getContractAt(
      name: "Strategy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Strategy>;
    getContractAt(
      name: "VaultAPI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultAPI>;
    getContractAt(
      name: "VaultAPI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultAPI>;
    getContractAt(
      name: "CrvStrategyKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrvStrategyKeep3rJob>;
    getContractAt(
      name: "CrvStrategyKeep3rStealthJob2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CrvStrategyKeep3rStealthJob2>;
    getContractAt(
      name: "HarvestV2DetachedGaslessJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HarvestV2DetachedGaslessJob>;
    getContractAt(
      name: "TendV2DetachedGaslessJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TendV2DetachedGaslessJob>;
    getContractAt(
      name: "V2DetachedGaslessJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2DetachedGaslessJob>;
    getContractAt(
      name: "HarvestV2DetachedJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HarvestV2DetachedJob>;
    getContractAt(
      name: "TendV2DetachedJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TendV2DetachedJob>;
    getContractAt(
      name: "V2DetachedJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2DetachedJob>;
    getContractAt(
      name: "HarvestV2Keep3rStealthJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HarvestV2Keep3rStealthJob>;
    getContractAt(
      name: "HarvestV2QueueKeep3rStealthJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HarvestV2QueueKeep3rStealthJob>;
    getContractAt(
      name: "TendV2Keep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TendV2Keep3rJob>;
    getContractAt(
      name: "TendV2Keep3rStealthJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TendV2Keep3rStealthJob>;
    getContractAt(
      name: "V2Keep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2Keep3rJob>;
    getContractAt(
      name: "V2Keep3rPublicJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2Keep3rPublicJob>;
    getContractAt(
      name: "V2Keep3rStealthJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2Keep3rStealthJob>;
    getContractAt(
      name: "V2Keeper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2Keeper>;
    getContractAt(
      name: "V2QueueKeep3rStealthJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.V2QueueKeep3rStealthJob>;
    getContractAt(
      name: "VaultKeep3rJob",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultKeep3rJob>;
    getContractAt(
      name: "ERC20Mock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Mock>;
    getContractAt(
      name: "ERC20Token",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Token>;
    getContractAt(
      name: "GenericKeep3rV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GenericKeep3rV2>;
    getContractAt(
      name: "Context",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Context>;
    getContractAt(
      name: "Controller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Controller>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Detailed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Detailed>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "YVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YVault>;
    getContractAt(
      name: "Keep3rV2OracleFactoryWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Keep3rV2OracleFactoryWrapper>;
    getContractAt(
      name: "YUnsafeOracleV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YUnsafeOracleV1>;
    getContractAt(
      name: "ForceETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ForceETH>;
    getContractAt(
      name: "Gauge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Gauge>;
    getContractAt(
      name: "IController",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IController>;
    getContractAt(
      name: "ICurveFi",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICurveFi>;
    getContractAt(
      name: "Mintr",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mintr>;
    getContractAt(
      name: "StrategyCurveYVoterProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StrategyCurveYVoterProxy>;
    getContractAt(
      name: "Uni",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Uni>;
    getContractAt(
      name: "VoterProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VoterProxy>;
    getContractAt(
      name: "YERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.YERC20>;
    getContractAt(
      name: "Zap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Zap>;
    getContractAt(
      name: "Controller",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Controller>;
    getContractAt(
      name: "DERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DERC20>;
    getContractAt(
      name: "DRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DRewards>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "StrategyDForceUSDC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StrategyDForceUSDC>;
    getContractAt(
      name: "Uni",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Uni>;
    getContractAt(
      name: "Basefee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Basefee>;
    getContractAt(
      name: "BlockProtection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BlockProtection>;
    getContractAt(
      name: "IBlockProtection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBlockProtection>;
    getContractAt(
      name: "GasPriceLimited",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GasPriceLimited>;
    getContractAt(
      name: "Multicall2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Multicall2>;
    getContractAt(
      name: "IBlockProtection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBlockProtection>;
    getContractAt(
      name: "StrategistsBlockProtection",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StrategistsBlockProtection>;
    getContractAt(
      name: "IVaultsRegistryHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVaultsRegistryHelper>;
    getContractAt(
      name: "VaultsRegistryHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VaultsRegistryHelper>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
